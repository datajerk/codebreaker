MEMORY {
ZP:     start = $0020, size = $00C0, define = yes;
HEADER: start = $0000, size = $0004, file = %O;
RAM:    start = $0280, size = $1D80, file = %O;
}
SEGMENTS {
EXEHDR:   load = HEADER, type = ro;
STARTUP:  load = RAM,    type = ro, define = yes;
LOWCODE:  load = RAM,    type = ro,               optional = yes;
INIT:     load = RAM,    type = ro, define = yes, optional = yes;
CODE:     load = RAM,    type = ro;
RODATA:   load = RAM,    type = ro;
DATA:     load = RAM,    type = rw;
BSS:      load = RAM,    type = bss, define = yes;
HEAP:     load = RAM,    type = bss, optional = yes;
ZEROPAGE: load = ZP,     type = zp;
}
FEATURES {
CONDES: segment = INIT,
type = constructor,
label = __CONSTRUCTOR_TABLE__,
count = __CONSTRUCTOR_COUNT__;
CONDES: segment = RODATA,
type = destructor,
label = __DESTRUCTOR_TABLE__,
count = __DESTRUCTOR_COUNT__;
CONDES: type = interruptor,
segment = RODATA,
label = __INTERRUPTOR_TABLE__,
count = __INTERRUPTOR_COUNT__;
}
SYMBOLS {
__STACKSIZE__ = $800;
}



